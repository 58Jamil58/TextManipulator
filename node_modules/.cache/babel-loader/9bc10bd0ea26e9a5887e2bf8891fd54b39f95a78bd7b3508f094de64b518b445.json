{"ast":null,"code":"import'./App.css';import About from'./components/About';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import{useState}from'react';import Alert from'./components/Alert';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setmode]=useState('light');const[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert('');},2000);};let toggleMode=()=>{if(mode==='light'){setmode('dark');document.body.style.backgroundColor='black';showAlert(\"Dark Mode has been enabled\",\"success\");}else{setmode('light');document.body.style.backgroundColor='white';showAlert(\"Light Mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextManipulator\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter text to analyze below\",mode:mode})})]});}export default App;","map":{"version":3,"names":["About","Navbar","TextForm","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","className","heading"],"sources":["C:/Users/akhta/OneDrive/Desktop/REACT/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert('')\n    }, 2000);\n  }\n  let toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='black';\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n\n      <Navbar title = 'TextManipulator' mode = {mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        \n        <TextForm showAlert = {showAlert} heading = 'Enter text to analyze below' mode = {mode}/>\n        {/* <About/> */}\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAa,SAAS,CAAGA,CAACC,OAAO,CAACC,IAAI,GAAG,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAGF,OAAO,CACbC,IAAI,CAAGA,IACT,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CACD,GAAI,CAAAM,UAAU,CAACA,CAAA,GAAI,CACjB,GAAGT,IAAI,GAAG,OAAO,CAAC,CAChBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,OAAO,CAC3CT,SAAS,CAAC,4BAA4B,CAAC,SAAS,CAAC,CACnD,CAAC,IACG,CACFH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,OAAO,CAC3CT,SAAS,CAAC,6BAA6B,CAAC,SAAS,CAAC,CACpD,CACF,CAAC,CACD,mBACEN,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eAEEpB,IAAA,CAACL,MAAM,EAAC0B,KAAK,CAAG,iBAAiB,CAACf,IAAI,CAAIA,IAAK,CAACS,UAAU,CAAEA,UAAW,CAAC,CAAC,cACzEf,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBR,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAF,QAAA,cAE7BpB,IAAA,CAACJ,QAAQ,EAACc,SAAS,CAAIA,SAAU,CAACa,OAAO,CAAG,6BAA6B,CAACjB,IAAI,CAAIA,IAAK,CAAC,CAAC,CAEtF,CAAC,EAEN,CAAC,CAEP,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}