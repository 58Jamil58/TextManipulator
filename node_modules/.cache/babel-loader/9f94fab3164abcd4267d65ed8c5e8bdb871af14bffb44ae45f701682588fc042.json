{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhta\\\\OneDrive\\\\Desktop\\\\REACT\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpCase = () => {\n    console.log(\"Uppercase button was clicked\");\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    console.log(\"On change\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter the text');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"myBox\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpCase,\n      children: \"convert to Uppercaser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" minutes to read these words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"kES//Q0ZYg2Ltc02oI5POgtsz6A=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpCase","console","log","newText","text","toUpperCase","setText","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["C:/Users/akhta/OneDrive/Desktop/REACT/my-app/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpCase = ()=>{\r\n        console.log(\"Uppercase button was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const [text,setText] = useState('Enter the text');\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                <h1>{props.heading}</h1>\r\n                <textarea className=\"form-control\" value = {text}  onChange={handleOnChange}  id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>  \r\n            <button className=\"btn btn-primary\" onClick={handleUpCase}>convert to Uppercaser</button>\r\n            <div className=\"container my-3\">\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").length} minutes to read these words</p>\r\n\r\n            </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,YAAY,GAAGA,CAAA,KAAI;IACrBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC;IAChCC,OAAO,CAACH,OAAO,CAAC;EACpB,CAAC;EACD,MAAMI,cAAc,GAAIC,KAAK,IAAG;IAC5BP,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE/B,CAAC;EACD,MAAM,CAACN,IAAI,EAACE,OAAO,CAAC,GAAGd,QAAQ,CAAC,gBAAgB,CAAC;EACjD,oBACIE,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBjB,OAAA;QAAAiB,QAAA,EAAKb,KAAK,CAACe;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBvB,OAAA;QAAUkB,SAAS,EAAC,cAAc;QAACF,KAAK,EAAIN,IAAK;QAAEc,QAAQ,EAAEX,cAAe;QAAEY,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G,CAAC,eACNvB,OAAA;MAAQkB,SAAS,EAAC,iBAAiB;MAACS,OAAO,EAAErB,YAAa;MAAAW,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzFvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,EAAI;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BvB,OAAA;QAAAiB,QAAA,GAAIP,IAAI,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,aAAW,EAACnB,IAAI,CAACmB,MAAM,EAAC,aAAW;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClEvB,OAAA;QAAAiB,QAAA,GAAI,KAAK,GAACP,IAAI,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,8BAA4B;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhE,CAAC;EAAA,eACZ,CAAC;AAEP;AAAClB,EAAA,CA3BuBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}