{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhta\\\\OneDrive\\\\Desktop\\\\REACT\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport { createBrowserRouter, RouterProvider, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert('');\n    }, 2000);\n  };\n  let toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextManipulator\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            showAlert: showAlert,\n            heading: \"Enter text to analyze below\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Hfaih7U57CCUbx8mYoqLc0MRXzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","TextForm","useState","Alert","createBrowserRouter","RouterProvider","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","Switch","exact","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/akhta/OneDrive/Desktop/REACT/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert('')\n    }, 2000);\n  }\n  let toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='black';\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n\n      <Navbar title = 'TextManipulator' mode = {mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n        <Route exact path=\"/\">\n          <TextForm showAlert = {showAlert} heading = 'Enter text to analyze below' mode = {mode}/>\n        </Route>\n        <Route path=\"/about\">\n          <About/>\n        </Route>\n      </Switch>\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}